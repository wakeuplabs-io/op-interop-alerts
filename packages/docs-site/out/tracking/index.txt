2:I[79550,["231","static/chunks/231-d3fb88463de409bd.js","897","static/chunks/897-d672c0d1c9e62386.js","864","static/chunks/app/tracking/page-c5f6a6ffacea4981.js"],"CodeTabs"]
3:I[79550,["231","static/chunks/231-d3fb88463de409bd.js","897","static/chunks/897-d672c0d1c9e62386.js","864","static/chunks/app/tracking/page-c5f6a6ffacea4981.js"],"TabPanel"]
4:I[79550,["231","static/chunks/231-d3fb88463de409bd.js","897","static/chunks/897-d672c0d1c9e62386.js","864","static/chunks/app/tracking/page-c5f6a6ffacea4981.js"],"default"]
b:I[231,["231","static/chunks/231-d3fb88463de409bd.js","897","static/chunks/897-d672c0d1c9e62386.js","864","static/chunks/app/tracking/page-c5f6a6ffacea4981.js"],""]
c:I[39275,[],""]
d:I[61343,[],""]
e:I[12292,["231","static/chunks/231-d3fb88463de409bd.js","185","static/chunks/app/layout-63c6c6c5ccaf3884.js"],"default"]
f:I[78573,["231","static/chunks/231-d3fb88463de409bd.js","185","static/chunks/app/layout-63c6c6c5ccaf3884.js"],"default"]
5:T57f,import { 
  startTracking, 
  TrackingResult, 
  TrackingCallback 
} from '@wakeuplabs/op-interop-alerts-sdk';
import { chainsInfoMock } from '@wakeuplabs/op-interop-alerts-sdk/config';

// Define your private keys
const pksInfo = {
  origin: process.env.ORIGIN_PRIVATE_KEY as `0x${string}`,
  destination: process.env.DESTINATION_PRIVATE_KEY as `0x${string}`,
};

// Define callback to handle tracking results
const trackingCallback: TrackingCallback = (result: TrackingResult) => {
  console.log(`[${result.timestamp.toISOString()}] Tracking result:`, result.success);
  
  if (result.success && result.data) {
    const { sentMessage, relayMessage } = result.data;
    
    // Calculate latency
    const latency = relayMessage.localTimestamp.getTime() - 
                   sentMessage.localTimestamp.getTime();
    
    console.log(`‚úÖ Message relayed successfully in ${latency}ms`);
    console.log(`üìä Gas used - Send: ${sentMessage.gasUsed}, Relay: ${relayMessage.gasUsed}`);
    
  } else if (result.error) {
    console.error(`‚ùå Tracking failed: ${result.error.error.message}`);
  }
};

// Start continuous tracking (checks every 10 minutes)
async function main() {
  try {
    await startTracking(
      chainsInfoMock,
      pksInfo, 
      trackingCallback,
      10 // Check every 10 minutes
    );
  } catch (error) {
    console.error('Failed to start tracking:', error);
  }
}

main();6:T51d,const { 
  startTracking 
} = require('@wakeuplabs/op-interop-alerts-sdk');
const { chainsInfoMock } = require('@wakeuplabs/op-interop-alerts-sdk/config');

// Define your private keys
const pksInfo = {
  origin: process.env.ORIGIN_PRIVATE_KEY,
  destination: process.env.DESTINATION_PRIVATE_KEY,
};

// Define callback to handle tracking results
const trackingCallback = (result) => {
  console.log(`[${result.timestamp.toISOString()}] Tracking result:`, result.success);
  
  if (result.success && result.data) {
    const { sentMessage, relayMessage } = result.data;
    
    // Calculate latency
    const latency = relayMessage.localTimestamp.getTime() - 
                   sentMessage.localTimestamp.getTime();
    
    console.log(`‚úÖ Message relayed successfully in ${latency}ms`);
    console.log(`üìä Gas used - Send: ${sentMessage.gasUsed}, Relay: ${relayMessage.gasUsed}`);
    
  } else if (result.error) {
    console.error(`‚ùå Tracking failed: ${result.error.error.message}`);
  }
};

// Start continuous tracking (checks every 10 minutes)
async function main() {
  try {
    await startTracking(
      chainsInfoMock,
      pksInfo, 
      trackingCallback,
      10 // Check every 10 minutes
    );
  } catch (error) {
    console.error('Failed to start tracking:', error);
  }
}

main();7:T543,import { 
  sendPing, 
  SendPingResult 
} from '@wakeuplabs/op-interop-alerts-sdk';
import { chainsInfoMock } from '@wakeuplabs/op-interop-alerts-sdk/config';

const pksInfo = {
  origin: process.env.ORIGIN_PRIVATE_KEY as `0x${string}`,
  destination: process.env.DESTINATION_PRIVATE_KEY as `0x${string}`,
};

async function testSendPing() {
  try {
    const result: SendPingResult = await sendPing(chainsInfoMock, pksInfo);
    
    if (result.status === 'SUCCESS') {
      console.log('‚úÖ Ping sent successfully!');
      console.log('Transaction Hash:', result.data.transactionHash);
      console.log('Gas Used:', result.data.eventData.gasUsed.toString());
      console.log('Message Sender:', result.data.sentMessageSender);
      console.log('Message Payload:', result.data.sentMessagePayload);
      
      // Access the event data
      const eventData = result.data.eventData;
      console.log('Event Args:', {
        destination: eventData.event.args.destination?.toString(),
        target: eventData.event.args.target,
        messageNonce: eventData.event.args.messageNonce?.toString(),
        sender: eventData.event.args.sender
      });
      
    } else {
      console.error('‚ùå Failed to send ping:', result.error.message);
    }
  } catch (error) {
    console.error('Error sending ping:', error);
  }
}

testSendPing();8:T504,const { sendPing } = require('@wakeuplabs/op-interop-alerts-sdk');
const { chainsInfoMock } = require('@wakeuplabs/op-interop-alerts-sdk/config');

const pksInfo = {
  origin: process.env.ORIGIN_PRIVATE_KEY,
  destination: process.env.DESTINATION_PRIVATE_KEY,
};

async function testSendPing() {
  try {
    const result = await sendPing(chainsInfoMock, pksInfo);
    
    if (result.status === 'SUCCESS') {
      console.log('‚úÖ Ping sent successfully!');
      console.log('Transaction Hash:', result.data.transactionHash);
      console.log('Gas Used:', result.data.eventData.gasUsed.toString());
      console.log('Message Sender:', result.data.sentMessageSender);
      console.log('Message Payload:', result.data.sentMessagePayload);
      
      // Access the event data
      const eventData = result.data.eventData;
      console.log('Event Args:', {
        destination: eventData.event.args.destination?.toString(),
        target: eventData.event.args.target,
        messageNonce: eventData.event.args.messageNonce?.toString(),
        sender: eventData.event.args.sender
      });
      
    } else {
      console.error('‚ùå Failed to send ping:', result.error.message);
    }
  } catch (error) {
    console.error('Error sending ping:', error);
  }
}

testSendPing();9:T84e,import { 
  sendPing, 
  waitForRelayedMessage,
  WaitForRelayedMessageResult 
} from '@wakeuplabs/op-interop-alerts-sdk';
import { chainsInfoMock } from '@wakeuplabs/op-interop-alerts-sdk/config';

const pksInfo = {
  origin: process.env.ORIGIN_PRIVATE_KEY as `0x${string}`,
  destination: process.env.DESTINATION_PRIVATE_KEY as `0x${string}`,
};

async function trackMessageRelay() {
  try {
    // First, send a ping message
    const sendResult = await sendPing(chainsInfoMock, pksInfo);
    
    if (sendResult.status !== 'SUCCESS') {
      console.error('Failed to send ping:', sendResult.error.message);
      return;
    }
    
    console.log('‚úÖ Ping sent, waiting for relay...');
    
    // Wait for the message to be relayed
    const relayResult: WaitForRelayedMessageResult = await waitForRelayedMessage(
      chainsInfoMock,
      sendResult.data.sentMessageSender,
      sendResult.data.sentMessagePayload
    );
    
    if (relayResult.status === 'SUCCESS') {
      console.log('‚úÖ Message relayed successfully!');
      
      const relayData = relayResult.data;
      console.log('Relay Transaction Hash:', relayData.transactionHash);
      console.log('Relay Gas Used:', relayData.eventData.gasUsed.toString());
      
      // Calculate total latency
      const sendTime = sendResult.data.eventData.localTimestamp;
      const relayTime = relayData.eventData.localTimestamp;
      const latency = relayTime.getTime() - sendTime.getTime();
      
      console.log(`‚è±Ô∏è  Total latency: ${latency}ms`);
      
      // Access relay event data
      const eventData = relayData.eventData;
      console.log('Relay Event Args:', {
        source: eventData.event.args.source?.toString(),
        messageNonce: eventData.event.args.messageNonce?.toString(),
        messageHash: eventData.event.args.messageHash,
        returnDataHash: eventData.event.args.returnDataHash
      });
      
    } else {
      console.error('‚ùå Failed to wait for relay:', relayResult.error.message);
    }
    
  } catch (error) {
    console.error('Error tracking message relay:', error);
  }
}

trackMessageRelay();a:T7fa,const { 
  sendPing, 
  waitForRelayedMessage 
} = require('@wakeuplabs/op-interop-alerts-sdk');
const { chainsInfoMock } = require('@wakeuplabs/op-interop-alerts-sdk/config');

const pksInfo = {
  origin: process.env.ORIGIN_PRIVATE_KEY,
  destination: process.env.DESTINATION_PRIVATE_KEY,
};

async function trackMessageRelay() {
  try {
    // First, send a ping message
    const sendResult = await sendPing(chainsInfoMock, pksInfo);
    
    if (sendResult.status !== 'SUCCESS') {
      console.error('Failed to send ping:', sendResult.error.message);
      return;
    }
    
    console.log('‚úÖ Ping sent, waiting for relay...');
    
    // Wait for the message to be relayed
    const relayResult = await waitForRelayedMessage(
      chainsInfoMock,
      sendResult.data.sentMessageSender,
      sendResult.data.sentMessagePayload
    );
    
    if (relayResult.status === 'SUCCESS') {
      console.log('‚úÖ Message relayed successfully!');
      
      const relayData = relayResult.data;
      console.log('Relay Transaction Hash:', relayData.transactionHash);
      console.log('Relay Gas Used:', relayData.eventData.gasUsed.toString());
      
      // Calculate total latency
      const sendTime = sendResult.data.eventData.localTimestamp;
      const relayTime = relayData.eventData.localTimestamp;
      const latency = relayTime.getTime() - sendTime.getTime();
      
      console.log(`‚è±Ô∏è  Total latency: ${latency}ms`);
      
      // Access relay event data
      const eventData = relayData.eventData;
      console.log('Relay Event Args:', {
        source: eventData.event.args.source?.toString(),
        messageNonce: eventData.event.args.messageNonce?.toString(),
        messageHash: eventData.event.args.messageHash,
        returnDataHash: eventData.event.args.returnDataHash
      });
      
    } else {
      console.error('‚ùå Failed to wait for relay:', relayResult.error.message);
    }
    
  } catch (error) {
    console.error('Error tracking message relay:', error);
  }
}

trackMessageRelay();0:["vaz_tpm5HaGxb8wvZm7sd",[[["",{"children":["tracking",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",{"children":["tracking",{"children":["__PAGE__",{},[["$L1",["$","div",null,{"className":"max-w-none sm:max-w-4xl mx-auto","children":[["$","div",null,{"className":"mb-8","children":[["$","div",null,{"className":"flex items-center space-x-3 mb-4","children":[["$","div",null,{"className":"w-10 h-10 bg-blue/10 rounded-lg flex items-center justify-center","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-zap w-5 h-5 text-blue","children":[["$","path","1xq2db",{"d":"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z"}],"$undefined"]}]}],["$","h1",null,{"className":"text-3xl font-bold text-midnight","children":"Tracking Module"}]]}],["$","p",null,{"className":"text-lg text-gray-600","children":"Monitor cross-chain messages in real-time across Optimism Superchain networks. Track send and relay events with detailed timing and gas information."}]]}],["$","div",null,{"className":"mb-8","children":[["$","h2",null,{"className":"text-2xl font-bold text-gray-900 mb-4","children":"Overview"}],["$","p",null,{"className":"text-gray-600 mb-6","children":"The Tracking Module provides three main functions for monitoring cross-chain interoperability:"}],["$","div",null,{"className":"grid md:grid-cols-3 gap-4 mb-6","children":[["$","div",null,{"className":"bg-white border border-gray-200 rounded-lg p-4","children":[["$","h3",null,{"className":"font-semibold text-gray-900 mb-2","children":"startTracking"}],["$","p",null,{"className":"text-sm text-gray-600","children":"Continuous monitoring loop that tracks messages at regular intervals"}]]}],["$","div",null,{"className":"bg-white border border-gray-200 rounded-lg p-4","children":[["$","h3",null,{"className":"font-semibold text-gray-900 mb-2","children":"sendPing"}],["$","p",null,{"className":"text-sm text-gray-600","children":"Send a test message from origin to destination chain"}]]}],["$","div",null,{"className":"bg-white border border-gray-200 rounded-lg p-4","children":[["$","h3",null,{"className":"font-semibold text-gray-900 mb-2","children":"waitForRelayedMessage"}],["$","p",null,{"className":"text-sm text-gray-600","children":"Wait for and track the relay of a specific message"}]]}]]}]]}],["$","div",null,{"className":"mb-8","children":[["$","h2",null,{"className":"text-2xl font-bold text-gray-900 mb-4","children":"startTracking"}],["$","p",null,{"className":"text-gray-600 mb-6","children":"The main function for continuous cross-chain message monitoring. It runs in a loop, sending ping messages and tracking their relay status."}],["$","div",null,{"className":"border rounded-lg p-2 sm:p-4 md:p-6 bg-blue/5 border-blue/20 mb-6","children":[["$","div",null,{"className":"flex items-start space-x-2 sm:space-x-3 mb-2 sm:mb-3","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-info w-4 h-4 sm:w-5 sm:h-5 mt-0.5 flex-shrink-0 text-blue","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","path","1dtifu",{"d":"M12 16v-4"}],["$","path","e9boi3",{"d":"M12 8h.01"}],"$undefined"]}],["$","h3",null,{"className":"text-sm sm:text-base md:text-lg font-semibold text-midnight","children":"Function Signature"}]]}],["$","div",null,{"className":"text-sm sm:text-base","children":["$","code",null,{"className":"text-gray-700 text-sm","children":"startTracking(chainsInfo, pksInfo, callback?, intervalMinutes?)"}]}]]}],["$","$L2",null,{"children":[["$","$L3",null,{"label":"TypeScript","children":["$","$L4",null,{"language":"typescript","children":"$5"}]}],["$","$L3",null,{"label":"JavaScript","children":["$","$L4",null,{"language":"javascript","children":"$6"}]}]]}],["$","div",null,{"className":"mt-6","children":[["$","h3",null,{"className":"text-lg font-semibold text-gray-900 mb-3","children":"Parameters"}],["$","div",null,{"className":"overflow-x-auto","children":["$","table",null,{"className":"w-full border border-gray-200 rounded-lg","children":[["$","thead",null,{"className":"bg-gray-50","children":["$","tr",null,{"children":[["$","th",null,{"className":"px-4 py-3 text-left text-sm font-semibold text-gray-900","children":"Parameter"}],["$","th",null,{"className":"px-4 py-3 text-left text-sm font-semibold text-gray-900","children":"Type"}],["$","th",null,{"className":"px-4 py-3 text-left text-sm font-semibold text-gray-900","children":"Description"}]]}]}],["$","tbody",null,{"className":"divide-y divide-gray-200","children":[["$","tr",null,{"children":[["$","td",null,{"className":"px-4 py-3 text-sm font-mono text-gray-900","children":"chainsInfo"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"ChainsInfo"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"Configuration for origin and destination chains"}]]}],["$","tr",null,{"children":[["$","td",null,{"className":"px-4 py-3 text-sm font-mono text-gray-900","children":"pksInfo"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"PKsInfo"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"Private keys for both chains"}]]}],["$","tr",null,{"children":[["$","td",null,{"className":"px-4 py-3 text-sm font-mono text-gray-900","children":"callback"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"TrackingCallback?"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"Optional callback function for tracking results"}]]}],["$","tr",null,{"children":[["$","td",null,{"className":"px-4 py-3 text-sm font-mono text-gray-900","children":"intervalMinutes"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"number?"}],["$","td",null,{"className":"px-4 py-3 text-sm text-gray-600","children":"Interval between checks in minutes (default: 10)"}]]}]]}]]}]}]]}]]}],["$","div",null,{"className":"mb-8","children":[["$","h2",null,{"className":"text-2xl font-bold text-gray-900 mb-4","children":"sendPing"}],["$","p",null,{"className":"text-gray-600 mb-6","children":"Send a test message from the origin chain to the destination chain. This function returns detailed information about the sent message."}],["$","$L2",null,{"children":[["$","$L3",null,{"label":"TypeScript","children":["$","$L4",null,{"language":"typescript","children":"$7"}]}],["$","$L3",null,{"label":"JavaScript","children":["$","$L4",null,{"language":"javascript","children":"$8"}]}]]}]]}],["$","div",null,{"className":"mb-8","children":[["$","h2",null,{"className":"text-2xl font-bold text-gray-900 mb-4","children":"waitForRelayedMessage"}],["$","p",null,{"className":"text-gray-600 mb-6","children":"Wait for and track the relay of a specific message on the destination chain. This function monitors for the RelayedMessage event that corresponds to a previously sent message."}],["$","$L2",null,{"children":[["$","$L3",null,{"label":"TypeScript","children":["$","$L4",null,{"language":"typescript","children":"$9"}]}],["$","$L3",null,{"label":"JavaScript","children":["$","$L4",null,{"language":"javascript","children":"$a"}]}]]}]]}],["$","div",null,{"className":"mb-8","children":[["$","h2",null,{"className":"text-2xl font-bold text-gray-900 mb-4","children":"Best Practices"}],["$","div",null,{"className":"space-y-6","children":[["$","div",null,{"className":"bg-blue/5 border border-blue/20 rounded-lg p-4","children":["$","div",null,{"className":"flex items-start space-x-3","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-circle-check-big w-5 h-5 text-blue mt-0.5 flex-shrink-0","children":[["$","path","g774vq",{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","path","1pflzl",{"d":"m9 11 3 3L22 4"}],"$undefined"]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-semibold text-midnight mb-1","children":"Handle Errors Gracefully"}],["$","p",null,{"className":"text-gray-700 text-sm","children":"Always check the status of results and handle both success and failure cases. Network issues and chain congestion can cause temporary failures."}]]}]]}]}],["$","div",null,{"className":"bg-blue/5 border border-blue/20 rounded-lg p-4","children":["$","div",null,{"className":"flex items-start space-x-3","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-circle-check-big w-5 h-5 text-blue mt-0.5 flex-shrink-0","children":[["$","path","g774vq",{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","path","1pflzl",{"d":"m9 11 3 3L22 4"}],"$undefined"]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-semibold text-midnight mb-1","children":"Use Appropriate Intervals"}],["$","p",null,{"className":"text-gray-700 text-sm","children":"Choose tracking intervals based on your needs. Shorter intervals provide more data but consume more resources. For production monitoring, 5-10 minutes is usually sufficient."}]]}]]}]}],["$","div",null,{"className":"bg-blue/5 border border-blue/20 rounded-lg p-4","children":["$","div",null,{"className":"flex items-start space-x-3","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-circle-check-big w-5 h-5 text-blue mt-0.5 flex-shrink-0","children":[["$","path","g774vq",{"d":"M22 11.08V12a10 10 0 1 1-5.93-9.14"}],["$","path","1pflzl",{"d":"m9 11 3 3L22 4"}],"$undefined"]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-semibold text-midnight mb-1","children":"Store Tracking Results"}],["$","p",null,{"className":"text-gray-700 text-sm","children":"Keep a history of tracking results to generate meaningful metrics and detect patterns. This data is essential for the Metrics and Alerts modules."}]]}]]}]}],["$","div",null,{"className":"bg-orange/5 border border-orange/20 rounded-lg p-4","children":["$","div",null,{"className":"flex items-start space-x-3","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-circle-x w-5 h-5 text-orange mt-0.5 flex-shrink-0","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","path","1uzhvr",{"d":"m15 9-6 6"}],["$","path","z0biqf",{"d":"m9 9 6 6"}],"$undefined"]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-semibold text-midnight mb-1","children":"Avoid Very Short Intervals"}],["$","p",null,{"className":"text-gray-700 text-sm","children":"Don't set intervals shorter than 1 minute as this can overwhelm the networks and may be considered spam by RPC providers."}]]}]]}]}]]}]]}],["$","div",null,{"className":"bg-blue/5 border border-blue/20 rounded-lg p-6","children":[["$","h2",null,{"className":"text-xl font-bold text-gray-900 mb-4","children":"Next Steps"}],["$","p",null,{"className":"text-gray-700 mb-4","children":"Now that you understand message tracking, learn how to generate metrics from your tracking data:"}],["$","div",null,{"className":"flex flex-col sm:flex-row gap-3","children":[["$","$Lb",null,{"href":"/metrics","className":"inline-flex items-center px-4 py-2 bg-blue text-white font-medium rounded-lg hover:bg-blue/80 transition-colors","children":["Metrics Module",["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-right w-4 h-4 ml-2","children":[["$","path","1ays0h",{"d":"M5 12h14"}],["$","path","xquz4c",{"d":"m12 5 7 7-7 7"}],"$undefined"]}]]}],["$","$Lb",null,{"href":"/examples","className":"inline-flex items-center px-4 py-2 border border-gray-300 text-gray-700 font-medium rounded-lg hover:bg-gray-50 transition-colors","children":["View Examples",["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-right w-4 h-4 ml-2","children":[["$","path","1ays0h",{"d":"M5 12h14"}],["$","path","xquz4c",{"d":"m12 5 7 7-7 7"}],"$undefined"]}]]}]]}]]}]]}]],null],null]},["$","$Lc",null,{"parallelRouterKey":"children","segmentPath":["children","tracking","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Ld",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__className_1ef16e","children":["$","div",null,{"className":"min-h-screen bg-white","children":[["$","$Le",null,{}],["$","div",null,{"className":"flex","children":[["$","aside",null,{"className":"hidden md:block w-64 flex-shrink-0","children":["$","div",null,{"className":"sticky top-16 h-screen overflow-y-auto","children":["$","$Lf",null,{}]}]}],["$","main",null,{"className":"flex-1 max-w-none","children":["$","div",null,{"className":"pl-4 pr-4 sm:pl-6 sm:pr-6 lg:pl-8 lg:pr-8 py-8","children":["$","$Lc",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Ld",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}]]}],["$","footer",null,{"className":"bg-gray-50 border-t border-gray-300","children":["$","div",null,{"className":"px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center","children":[["$","div",null,{"className":"flex items-center space-x-4 mb-6 md:mb-0","children":[["$","img",null,{"src":"/logo-wu.png","alt":"WakeUp Labs","className":"h-8 w-auto"}],["$","div",null,{"className":"flex flex-col","children":[["$","span",null,{"className":"text-sm font-medium text-midnight","children":"OP Interop Alerts SDK"}],["$","span",null,{"className":"text-xs text-gray-500","children":"Cross-chain monitoring documentation"}]]}]]}],["$","div",null,{"className":"flex items-center space-x-4","children":[["$","a",null,{"href":"https://www.npmjs.com/package/@wakeuplabs/op-interop-alerts-sdk","target":"_blank","rel":"noopener noreferrer","className":"hover:opacity-80 transition-opacity p-2","title":"NPM Package","children":["$","img",null,{"src":"/npm-logo-red.png","alt":"NPM","className":"h-4 w-auto"}]}],["$","a",null,{"href":"https://github.com/wakeuplabs-io/op-interop-alerts","target":"_blank","rel":"noopener noreferrer","className":"hover:opacity-80 transition-opacity p-2","title":"GitHub Repository","children":["$","img",null,{"src":"/github-mark.png","alt":"GitHub","className":"h-5 w-auto"}]}],["$","a",null,{"href":"https://wakeuplabs.io","target":"_blank","rel":"noopener noreferrer","className":"hover:opacity-80 transition-opacity p-2","title":"WakeUp Labs","children":["$","img",null,{"src":"/logo-wu-isotype.png","alt":"WakeUp Labs","className":"h-4 w-auto"}]}]]}]]}]}]}]]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/op-interop-alerts/_next/static/css/d8d0d207bb4bc00b.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L10"]]]]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Tracking Module | OP Interop Alerts SDK"}],["$","meta","3",{"name":"description","content":"Learn how to use the Tracking Module to monitor cross-chain messages across Optimism Superchain networks."}],["$","meta","4",{"name":"author","content":"WakeUp Labs"}],["$","meta","5",{"name":"keywords","content":"optimism,superchain,cross-chain,interoperability,monitoring,alerts,l2,ethereum"}],["$","meta","6",{"name":"creator","content":"WakeUp Labs"}],["$","meta","7",{"property":"og:title","content":"OP Interop Alerts SDK"}],["$","meta","8",{"property":"og:description","content":"TypeScript SDK for monitoring cross-chain interoperability across Optimism Superchain"}],["$","meta","9",{"property":"og:url","content":"https://wakeuplabs-io.github.io/op-interop-alerts/"}],["$","meta","10",{"property":"og:site_name","content":"OP Interop Alerts SDK"}],["$","meta","11",{"property":"og:locale","content":"en_US"}],["$","meta","12",{"property":"og:type","content":"website"}],["$","meta","13",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","14",{"name":"twitter:title","content":"OP Interop Alerts SDK"}],["$","meta","15",{"name":"twitter:description","content":"TypeScript SDK for monitoring cross-chain interoperability across Optimism Superchain"}],["$","link","16",{"rel":"shortcut icon","href":"/favicon-wu.svg"}],["$","link","17",{"rel":"icon","href":"/favicon-wu.svg"}],["$","link","18",{"rel":"apple-touch-icon","href":"/favicon-wu.svg"}],["$","meta","19",{"name":"next-size-adjust"}]]
1:null
